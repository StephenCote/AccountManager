<Template>
	<import-xml src = "Templates/TemplateTools.xml" id = "TemplateTools" />
	<import-xml src = "/AccountManagerExample/Forms/BaseType.xml" />
	<embedded-script><![CDATA[
		embedded_init : function(){
			this.scopeHandler("manager_loaded", 0, 0, 1);
			this.scopeHandler("picker_loaded", 0, 0, 1);
			Hemi.message.service.subscribe(this, "onsessionrefresh", "handle_session_refresh");
		},
		embedded_destroy : function(){
			this._prehandle_manager_loaded = 0;
			this._prehandle_picker_loaded = 0;
			Hemi.message.service.unsubscribe(this, "onsessionrefresh", "handle_session_refresh");
		},

		handle_session_refresh : function(s,v){
			if(this.refreshSession) this.refreshSession(s,v,uwm.rule("IsLoggedIn"));
		},

		_handle_manager_loaded: function (v) {
			///
        },
		manageList : function(sType, sListId, sFN){
			var oProps = {openerId:this.getObjectId(),listType:sType,picker:1,pickFunction:sFN,listId:sListId};
			var oW = Hemi.app.createWindow("ManageList", uwm.getApiTypeView(sType) + "/Forms/List" + sType + "s.xml", "Manager-" + (sListId ? sListId : Hemi.guid()), 0, 0, oProps, this._prehandle_manager_loaded);
            if (oW) {
            	oW.resizeTo(450, 300);
            	Hemi.app.getWindowManager().CenterWindow(oW);
            	// Destroy the window when closed
            	//
            	oW.setHideOnClose(0);
            }
		},
		resizeForm : function(){
			if(this.resizeTo && this.getBody){
				if(this.getBody().scrollHeight > this.getBody().offsetHeight){
					var iH = this.getBody().scrollHeight + 50;
					if(iH > document.documentElement.clientHeight) iH = document.documentElement.clientHeight;
					Hemi.log("Resize To: " + this.getContainer().offsetWidth + "x" + iH);
					this.resizeTo(this.getContainer().offsetWidth,iH);
				}
			}
		},
		toggleField : function(l, n){
			var lbl =  this.GetElementByRID(l);//(typeof l == "string" ? this.GetElementByRID(l) : l);
			var cnt =  this.GetElementByRID(n);//(typeof n == "string" ? this.GetElementByRID(n) : n);
			var b = cnt.mark;
			var s = (b ? "[ - ]" : "[ + ]");
			var d = (b ? "block" : "none");
			cnt.mark = (b ? 0 : 1);
			Hemi.xml.setInnerXHTML(lbl,s);
			cnt.style.display = d;
			if(!lbl.mark){
				var ctl = this;
				lbl.mark = 1;
				var sL = l;
				var sN = n;
				lbl.onclick = function(){
					ctl.toggleField(sL,sN);
					ctl.resizeForm();
				};
			}
			//this.resizeForm();
		},
		openItem : function(o,typeName,viewTypeName){
			var _s = this.getProperties();
			if(!typeName) typeName = _s.typeName;
			if(!viewTypeName) viewTypeName = typeName;
			if(_s.populate && !o.populated){
				if(o.nameType && o.nameType.match(/^data$/gi) && o.detailsOnly && o.blob){
					Hemi.log("Not pulling own blob data for " + o.name + " unless specifically requested.");
				}
				else{
					Hemi.log("Not populated.  Fetching a populated version.");
					var oApi = window[uwm.getApi(typeName)];
					o = oApi["get" + typeName](o.name,o.group);
					if(!o.populated) alert("still not populated");
				}
			}
			this.openWindow(viewTypeName, o);
		},
		openWindow : function(sType,oType){
			var oProps = {openerId:this.getObjectId(),listType:sType,picker:0,viewType:oType,listId:0};
			var oW = Hemi.app.createWindow((oType && oType.id ? oType.name : "New" + sType), uwm.getApiTypeView(sType) + "/Forms/" + sType + ".xml", "View-" + (oType && oType.id ? sType + "-" + oType.id : Hemi.guid()), 0, 0, oProps);
            if (oW) {
            	oW.resizeTo(450, 400);
            	Hemi.app.getWindowManager().CenterWindow(oW);
            	// Destroy the window when closed
            	//
            	oW.setHideOnClose(0);
            }
		},
		pickText : function(o,sL,sH, sDV){
			var oW = Hemi.app.createWindow("Picker","/AccountManagerExample/Forms/TextPicker.xml","TextPicker-" + Hemi.guid(),0,0,{pickerValue:sDV,pickerLabel:sL,picker_handler:sH,openerId:o.getObjectId()},this._prehandle_picker_loaded);
			if(!oW) return;
			oW.setHideOnClose(0);
			oW.resizeTo(400,100);
			oW.center();
			oW.setIsModal(true);
			oW.hideButtons();
		},
		_handle_picker_loaded : function(oW){
	
		}
	]]></embedded-script>
</Template>