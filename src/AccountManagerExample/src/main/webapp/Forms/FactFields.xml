<html-fragment>
	<div class = "rocket-column-2">
		<p>
			Description:
		</p>
		<p>
			<input type = "text" rid = "description" bind = "${bean.rocketType}" class = "rocket-text" />
		</p>
	</div>
	<div rid = "gridCont" style = "display: none;" class = "rocket-column-2">
		<p>
			Is Parameter:
		</p>
		<p>
			<input type = "checkbox" bind = "${bean.rocketType}" rid = "parameter" />
		</p>
	</div>	
	<div class = "rocket-column-2">
		<p>
			Fact Type:
		</p>
		<p>
			<select rid = "factType" bind = "${bean.rocketType}">
			<option>UNKNOWN</option>
			<option>GROUP</option>
			<option>ROLE</option>
			<option>PERMISSION</option>
			<option>PROPERTY</option>
			<option>ATTRIBUTE</option>
			<option>STATIC</option>
			<option>FACTORY</option>
			<option>REST</option>
			<option>FUNCTION</option>
			<option>SUBJECT</option>
			<option>CONTEXT</option>
			<option>PARAMETER</option>
			<option>OPERATION</option>
			</select>
		</p>
	</div>
	<div class = "rocket-column-2" rid = "factoryTypeContainer">
		<p>
			Factory:
		</p>
		<p>
			<select rid = "factoryType" bind = "${bean.rocketType}">
				<option>UNKNOWN</option>
				<option>ACCOUNT</option>
	    		<option>DATA</option>
	    		<option>GROUP</option>
	    		<option>PERMISSION</option>
	    		<option>ROLE</option>
	    		<option>USER</option>
	    		<option>PERSON</option>
	    		<option>RESOURCE</option>
	    		<option>FACT</option>
	    		<option>FUNCTION</option>
	    		<option>FUNCTIONFACT</option>
	    		<option>OPERATION</option>
	    		<option>PATTERN</option>
	    		<option>POLICY</option>
	    		<option>RULE</option>
			</select>
		</p>
	</div>
<div class = "rocket-column-2">
		<p>
			Source Type:
		</p>
		<p>
			<select rid = "sourceDataType" bind = "${bean.rocketType}">
			<option>UNKNOWN</option>
    		<option>ARRAY</option>
    		<option>BIGINT</option>
    		<option>BINARY</option>
    		<option>BIT</option>
    		<option>BLOB</option>
    		<option>BOOLEAN</option>
    		<option>CHAR</option>
    		<option>CLOB</option>
    		<option>DATALINK</option>
    		<option>DATE</option>
    		<option>DECIMAL</option>
    		<option>DISTINCT</option>
    		<option>DOUBLE</option>
    		<option>FLOAT</option>
    		<option>INTEGER</option>
    		<option>JAVA_OBJECT</option>
    		<option>LONGVARBINARY</option>
    		<option>LONGVARCHAR</option>
    		<option>NULL</option>
    		<option>NUMERIC</option>
    		<option>OTHER</option>
    		<option>REAL</option>
    		<option>REF</option>
    		<option>SMALLINT</option>
    		<option>STRUCT</option>
    		<option>TIME</option>
    		<option>TIMESTAMP</option>
    		<option>TINYINT</option>
    		<option>VARBINARY</option>
    		<option>VARCHAR</option>
    		<option>TEXT</option>
			</select>
		</p>
	</div>

	<div class = "rocket-column-2">
		<p>
			Source Url:
		</p>
		<p>
			<input type = "text" rid = "sourceUrl" bind = "${bean.rocketType}" class = "rocket-text" />
		</p>
	</div>
	<div class = "rocket-column-2">
		<p>
			Source Urn:
		</p>
		<p>
			<input type = "text" rid = "sourceUrn" bind = "${bean.rocketType}" class = "rocket-text rocket-text-short" />
			<input type = "button" class = "rocket-button" value = "..." onclick = "${this}.findType()" />
		</p>
	</div>
	
	<embedded-script><![CDATA[
		addType : function(o){
			Hemi.log("Add fact type: " + o.name + ":" + o.factType);
			return accountManagerRule.addFact(o.name, o.description,o.factType, o.factoryType, o.sourceDataType, o.sourceUrn, o.sourceUrl,o.factData, o.group);
		},
		findType : function(){
			var sFType = this.GetElementByRID("factoryType").value;
			this.manageList(sFType.substring(0,1) + sFType.substring(1,sFType.length).toLowerCase(),0,"pickType");
		},
		pickType : function(t, o){
			var sType = this.GetElementByRID("factType").value;
			var sFType = this.GetElementByRID("factoryType").value;
			if(!o.populated && (!o.nameType.match(/^data$/i) || o.detailsOnly)){
				var sFLType = sFType.substring(0,1) + sFType.substring(1,sFType.length).toLowerCase();
				var oAPI = window[uwm.getApi(sFLType)];
				o = oAPI["get" + sFLType + "ById"](o.id);
			}
			var sUrl = "";
			var sUrn = "";
			var g;
			if(!o){
				sUrn = sUrl = "[ Error ]";
			}
			else if(o.nameType.match(/^group$/i)){
				 sUrl = o.path.substring(0,o.path.lastIndexOf("/"));
			}
			else if((g = o.group)){
				if(!g.populated) g = accountManager.getGroupById(g.id); 
				sUrl = g.path;
			}
			if(sType.match(/^(group|factory)$/i)){
				sUrn = o.name;
			}
			this.GetElementByRID("sourceUrl").value = sUrl;
			this.GetElementByRID("sourceUrn").value = sUrn;
		},
		prepareSave : function(o){

			return 1;
		}
	]]></embedded-script>
</html-fragment>
	