<?xml version="1.0" encoding="UTF-8"?>
<application-components>
<application-component id="cvsimg_decorator" package-name = "canvas">
<![CDATA[
component_init : function()
{
	Hemi.include("hemi.util.logger");
	Hemi.util.logger.addLogger(this, "Canvas Image Decorator", "Image Decorator", 233);
	this.log("Canvas Image decorator loaded");
},
setDelegate : function(o){
	this.getObjects().delegate = o;
},
setCanvas : function(o)
{
	this.getObjects().canvas = o;
	o.AddShapeDecorator(this);
},
/*
handle_canvas_click : function(oCanvas, e)
{
	if(!oCanvas.getProperties().MouseClickShape) return;
	var oShape = oCanvas.getObjects().MouseClickShape;
	if(!oShape.action) return;
	oCanvas.ClearTempCanvas();
	
	this.log("Click - " + oShape.referenceId);
	
	/// Drop the placeholder for the current position
	///
	if(oShape.type == "Image"){
		var oM = oCanvas.Image(oShape.image,oShape.x, oShape.y, "#00FF00", "#000000");
		//oM.selectable = 0;
	}

},
*/
/*
handle_canvas_mousedown : function(oCanvas, e)
{
	if(!oCanvas.getProperties().MouseTrackChoose) return;
	oCanvas.ClearTempCanvas();
	var oShape = oCanvas.getObjects().MouseDownShape;
	
	/// Drop the placeholder for the current position
	///
	if(oShape.type == "Image"){
		if(!oShape.selected){
			var oLast = oCanvas.getTemporaryContextConfig();
			var oCfg = oCanvas.getConfigByName("DropShadow");
			if(!oCfg){
				oCfg = oCanvas.newContextConfig("DropShadow");
			    oCfg.fillStyle = '#0f0';
	            oCfg.strokeStyle = '#0f0';
	            oCfg.shadowColor = '#AAAAFF';
	            oCfg.shadowOffsetX = 5;
	            oCfg.shadowOffsetY = 5;
	            oCfg.shadowBlur = 1;
			}
			oCanvas.setTemporaryContextConfig(oCfg);
			
			var oM = oCanvas.Image(oShape.image,oShape.x, oShape.y, "#00FF00", "#000000");
			oM.referenceName = oShape.referenceName;
			var icoHeight = (oShape.icoType == "IMG" ?  this.getObjects().delegate.getProperties().imgThumbHeight : this.getObjects().delegate.getProperties().dirThumbHeight);
			if(oShape.referenceName && !oShape.noLabel) oCanvas.Text(this.getObjects().delegate.scaleText(oShape.referenceName), oShape.x, oShape.y + icoHeight, "#000000","#000000","8pt","Arial");
			oShape.selected = 1;
			
			oCanvas.setTemporaryContextConfig(oLast);
		}
	}
},
*/


handle_canvas_mousemove : function(oCanvas, e)
{
   if(!oCanvas.getProperties().MouseTrackDown) return;

	     
	
	var sDropColor = "#FFFF00";
	var oDropShape = oCanvas.getObjects().MouseDropShape;
	var oDropNode, oCurrentNode = 0;
	//if(!oDropShape.referenceId) return;
	
	/*
	if(oDropShape && oDropShape.reference_id >= 0){
		oDropNode = this.getObjects().Hierarchy.getObjects().nodes[oDropShape.reference_id];
	}
	*/
	var oCurrent = oCanvas.getObjects().MouseDownShape;
	if(oCurrent && !oCurrent.drag) return;
	oCanvas.ClearTempCanvas();
	
	//Hemi.log("Current Shape = " + oCurrent);
	/*&& oCurrent.reference_id >= 0*/
	if(oCanvas.getProperties().MouseTrackChoose && oCurrent ){
		//this.log("Image decorator: MouseMove " + oCanvas.getProperties().MouseTrackChoose);
		//oCurrentNode = this.getObjects().Hierarchy.getObjects().nodes[oCurrent.reference_id];
		if(oCurrent.type == "Image"){
			var oM = oCanvas.Rect(oCurrent.x, oCurrent.y, oCurrent.image.width, oCurrent.image.height, "#FFFFFF", "#FFFFFF");
			oM.selectable = 0;
			var fLast = oCanvas.getTemporaryContext().globalAlpha;
			oCanvas.getTemporaryContext().globalAlpha = 0.5;
			oM = oCanvas.Image(oCurrent.image,oCurrent.x, oCurrent.y, "#00FF00","#000000");			
			oCanvas.getTemporaryContext().globalAlpha = fLast;
			oM.selectable = 0;
			oM = oCanvas.Image(
				oCurrent.image,
				oCanvas.getProperties().MouseTrackLeft - oCanvas.getProperties().MouseOffsetX,
				oCanvas.getProperties().MouseTrackTop - oCanvas.getProperties().MouseOffsetY,
				"#00FF00", "#000000"
			);
			oM.selectable = 0;
			var icoHeight = (oCurrent.icoType == "IMG" ?  this.getObjects().delegate.getProperties().imgThumbHeight : this.getObjects().delegate.getProperties().dirThumbHeight);
			if(oCurrent.referenceName && !oCurrent.noLabel) oCanvas.Text(this.getObjects().delegate.scaleText(oCurrent.referenceName), oCanvas.getProperties().MouseTrackLeft - oCanvas.getProperties().MouseOffsetX, oCanvas.getProperties().MouseTrackTop - oCanvas.getProperties().MouseOffsetY + icoHeight, "#000000","#000000","8pt","Arial");
			//this.BlotChildrenToTempShape(oCanvas, oCurrentNode, oCurrentNode, oM);
		}
		/*
		if(oDropNode && oCurrentNode &&
					(
					this.getObjects().Hierarchy.IsChild(oDropNode,oCurrentNode)
					||
					oCurrentNode.parent == oDropNode.index
					)
		) sDropColor = "#FF0000";
		*/
	} 

	if(oDropShape && oDropShape.type == "Image" && (oDropShape.referenceType == "CTL" || oDropShape.referenceType == "GROUP")){
		var oM = oCanvas.Image(oDropShape.image, oDropShape.x, oDropShape.y, sDropColor, "#000000");
		if(oDropShape.referenceName && !oDropShape.noLabel){
			var icoHeight = (oDropShape.icoType == "IMG" ?  this.getObjects().delegate.getProperties().imgThumbHeight : this.getObjects().delegate.getProperties().dirThumbHeight);
			oCanvas.Text(this.getObjects().delegate.scaleText(oDropShape.referenceName), oDropShape.x, oDropShape.y + icoHeight, "#000000","#000000","8pt","Arial");
		}
		oM.selectable = 0;
	}
}
]]>
</application-component>
</application-components>