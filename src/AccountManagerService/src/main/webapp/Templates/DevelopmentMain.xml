<?xml version="1.0" encoding="utf-8" ?>
<Template>
	<import-xml src = "Templates/TemplateTools.xml" id = "TemplateTools" />
	<import-xml src = "Fragments/TabTools.xml" id = "TabTools" />
	<p style = "clear:both;font-size:0px;margin:0px;"></p>
	<div rid = "components">
	</div>	
	<div rid = "fragments">
	</div>	
	<div rid = "modules">
	</div>
	<div rid = "projects">
	</div>	
	<div rid = "pub">
	</div>	
	<div rid = "tasks">
	</div>
	<div rid = "tests">
	</div>
	<div rid = "templates">
	</div>	
	<!--
	<div rid = "workers">
	</div>
	-->	
	<p>
	<input type = "button" value = "Configure Community" onclick = "${this}.configureGroups()" />
	<input type = "button" value = "Load Demos" onclick = "${this}.LoadDemo()" />
	</p>
	<embedded-script>
		<![CDATA[
			template_init: function(){
				this.scopeHandler("template_loaded", 0, 0, 1);
				this.AddTab("components","Components",this.scopeHandler("loadComponentsTab",0,1,1));
				this.AddTab("fragments","Fragments",this.scopeHandler("loadFragmentsTab",0,1,1));
				this.AddTab("modules","Modules",this.scopeHandler("loadModulesTab",0,1,1));
				this.AddTab("projects","Projects",this.scopeHandler("loadProjectsTab",0,1,1));
				this.AddTab("pub","Pub",this.scopeHandler("loadPubTab",0,1,1));
				this.AddTab("tasks","Tasks",this.scopeHandler("loadTasksTab",0,1,1));
				this.AddTab("tests","Tests",this.scopeHandler("loadTestsTab",0,1,1));
				this.AddTab("templates","Templates",this.scopeHandler("loadTemplatesTab",0,1,1));
				//this.AddTab("workers","Workers",this.scopeHandler("loadWorkersTab",0,1,1));
				this.configureGroups();
				this.ShowTab(0);
				this.loadComponentsTab();
			},
			LoadDemo : function(){
				var aStaticComponents = ["reflected","reflector"];
				var aStaticTemplates = ["form","setbeanform","getbeanform","elform","scriptform","reflect","formfieldsget","formfieldsset"];
				var aStaticFragments = ["contact","color","demobean"];
				var aStaticProjects = ["reflect"];
				var aStaticTasks = ["scriptxml","script","bootstrap"];
				var aStaticTests = ["asyncxml.js"];
				var aStaticModules = ["basic.js"];

			    this.AddDemoList("Component",aStaticComponents);
			    this.AddDemoList("Template",aStaticTemplates);
			    this.AddDemoList("Fragment",aStaticFragments);
			    this.AddDemoList("Project",aStaticProjects);
			    this.AddDemoList("Task",aStaticTasks);
			    this.AddDemoList("Test",aStaticTests);
			    this.AddDemoList("Module",aStaticModules);
				
				
			},
			AddDemoList : function(sType, aL){
				var sDBase = uwm.getPathForType("DWAC");
				var sBase = sDBase + "/" + sType + "s";
				var sSPath = "/HemiFramework/Hemi/Examples/Runnable/";
				var oGB = AM6Client.find("GROUP","DATA",sDBase);
				var oG = AM6Client.find("GROUP","DATA",sBase);
				var bScript = sType.match(/^(module|test)/gi);
				var sExt = (bScript ? "" : ".xml");
				var rReg = /dwac:(Fragments|Templates|Components|Modules|Tasks)+/;
				var m;
				for(var i = 0; i < aL.length; i++){
					var sName = sType.toLowerCase() + "." + aL[i] + sExt;
					var sOName = aL[i];
					var sText = Hemi.xml.getText(sSPath + sName);
					if(!sText || sText == null || sText.length == 0){
						Hemi.logError("Invalid file: " + sName);
						continue;
					}
					sText = sText.replace(/dwac:\/DWAC\/Anonymous/g,g_application_path + "media/" + AM6Client.dotPath(AM6Client.currentOrganization) + "/Data" + oGB.path);
					while ((m = sText.match(rReg)) && m.length > 1){
						sText = sText.replace(rReg, g_application_path + "media/" + AM6Client.dotPath(AM6Client.currentOrganization) + "/Data" + oGB.path + "/" + m[1]);
					}

					var o = AM6Client.getByName("DATA", oG.objectId, sOName);
					if(o != null){
						AM6Client.delete("DATA", o.objectId);
						o = null;
					}
					if(o == null){
						o = new org.cote.objects.dataType();
						o.name = sOName;
						o.blob = true;
						o.nameType = "DATA";
						o.mimeType = "text/" + (bScript ? "javascript" : "xml");
						o.description = "";
						o.id = 0;
						o.createdDate = new Date();
						o.modifiedDate = o.createdDate;
						o.expiryDate = o.createdDate;
						o.groupPath = oG.path;
					}
					o.dataBytesStore = uwm.base64Encode(sText);

					if(AM6Client.update("DATA",o)){
						Hemi.log("Loaded example " + sName);
					}
					else{
						Hemi.logError("Failed to load example " + sName);
					}
					
				}
			},
			_handle_template_loaded: function (v) {
				if (v && v.getProperties().local_invoke) {
					if (v.getProperties().local_invoke_params) v[v.getProperties().local_invoke].apply(v, v.getProperties().local_invoke_params);
					else v[v.getProperties().local_invoke]();
					v.getProperties().local_invoke = 0;
					v.getProperties().local_invoke_params = 0;
				}
			},
			getProps: function () {
				var _p = this.getProperties(),sBPath = uwm.getPathForType("DWAC");
								
				var sPath = sBPath + "/" + this.getProperties().current_tab;
				var oP = AM6Client.find("GROUP","DATA",sPath);
				
				return {
					application: "DWAC",
					current_group_id: (oP ? oP.objectId : 0),
					current_group_name: (oP ? oP.name : null),
					current_path: (oP ? oP.path : null),
					openerId : this.getObjectId()
				};
			},
			provideItem : function(vS){
				//alert(s + ":" + this.getProperties().current_tab + ":" + this.provideCreateItem);
				var oWp, sId = Hemi.guid(), oProps = this.getProps();
				
				if(typeof vS == "object"){
					if(vS.detailsOnly) vS = AM6Client.get("DATA", vS.objectId);
					sId = vS.objectId;
					oProps.local_invoke_params = [sId];
					oProps.local_invoke = "LoadObject";
					oProps.data_object = vS;
					
				}

				switch(this.getProperties().current_tab){
					case "Components":
						oWp = Hemi.app.createWindow("Component Builder", "Templates/ComponentBuilder.xml", "component-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Templates":
						oWp = Hemi.app.createWindow("Template Builder", "Templates/TemplateBuilder.xml", "template-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Fragments":
						oWp = Hemi.app.createWindow("Fragment Builder", "Templates/FragmentBuilder.xml", "fragment-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Modules":
						oWp = Hemi.app.createWindow("Module Builder", "Templates/ModuleBuilder.xml", "module-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Tests":
						oProps.testFeat = 1;
						oWp = Hemi.app.createWindow("Test Builder", "Templates/ModuleBuilder.xml", "test-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Tasks":
						oWp = Hemi.app.createWindow("Task Builder", "Templates/TaskBuilder.xml", "task-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Projects":
						oWp = Hemi.app.createWindow("Project Builder", "Templates/ProjectBuilder.xml", "project-" + sId, 0, 0, oProps, this._prehandle_template_loaded);
						break;
					case "Pub":
						var sUrl = g_application_path + "dwac/" + AM6Client.dotPath(AM6Client.currentOrganization) + "/Data" + vS.groupPath + "/" + vS.name;
						window.open(sUrl, vS.objectId);
						break;
				}
				if (oWp) {
					oWp.then((oW)=>{
						oW.resizeTo(650, 650);
						Hemi.app.getWindowManager().then((oM)=>{oM.CenterWindow(oW);});;
						// Destroy the window when finished
						//
						oW.setHideOnClose(0);
					});
				}
			},
			loadComponentsTab : function(o){
				this.loadTab("Components",o);
			},
			loadFragmentsTab : function(o){
				this.loadTab("Fragments",o);
			},
			loadModulesTab : function(o){
				this.loadTab("Modules",o);
			},
			loadProjectsTab : function(o){
				this.loadTab("Projects",o);
			},
			loadPubTab : function(o){
				this.loadTab("Pub",o);
			},
			loadTasksTab : function(o){
				this.loadTab("Tasks",o);
			},
			loadTestsTab : function(o){
				this.loadTab("Tests",o);
			},
			loadTemplatesTab : function(o){
				this.loadTab("Templates",o);
			},
			loadWorkersTab : function(o){
				this.loadTab("Workers",o);
			},
			
			loadTab : function(s, o){
				var c = this.getElementByRID(s.toLowerCase());
				this.getProperties().current_tab = s;

				if(c.loaded) return;
				c.loaded = 1;
				
				var oDiv = document.createElement("div");
				c.appendChild(oDiv);
				Hemi.app.createApplicationComponent(0, oDiv, this.getTemplateSpace())
				.then((ac)=>{
					ac.setTemplateIsSpace(1);
					ac.provideCreateItem = this.scopeHandler("provideItem",0,1,1);
					ac.provideOpenItem = ac.provideCreateItem;
					this.configureGroup(s);
					var sBPath = uwm.getPathForType("DWAC");
					var sPath = sBPath + "/" + s;
					ac.getProperties().defaultPath = sPath;
					ac.loadTemplate(uwm.getApiTypeView("Data") + "/Forms/ListDatas.xml");
				});
			},
			configureGroups : function(){
				var aG = ["Components","Fragments","Modules","Projects","Pub","Tasks","Tests","Templates"];
				for(var i = 0; i < aG.length; i++){
					this.configureGroup(aG[i]);
				}
			},
			configureGroup : function(s){
				var sBPath = uwm.getPathForType("DWAC");
				var sPath = sBPath + "/" + s;
				
				var oP = AM6Client.find("GROUP","DATA",sPath);
				if(!oP){
					if(irocket.getCommunityMode()){
						var oBP = AM6Client.find("GROUP","DATA",sBPath);
						if(!oBP){
							var oBPP = AM6Client.find("GROUP","DATA", sBPath.substring(0, sBPath.lastIndexOf("/")));
							
							oBP = new org.cote.objects.baseGroupType();
							oBP.name = "DWAC";
							oBP.parentId = oBPP.id;
							oBP.nameType = "GROUP";
							oBP.groupType = "DATA";
							if(AM6Client.update("GROUP",oBP)){
								oBP = AM6Client.find("GROUP","DATA",sPath);
								AM6Client.configureCommunityProjectGroupEntitlements(irocket.getCommunityLifecycle().objectId, irocket.getCommunityProject().objectId, oBP.objectId);

							}
						}
						oP = new org.cote.objects.baseGroupType();
						oP.name = s;
						oP.parentId = oBP.id;
						oP.nameType = "GROUP";
						oP.groupType = "DATA";
						if(AM6Client.update("GROUP",oP)){
							oP = AM6Client.find("GROUP","DATA",sPath);
							AM6Client.configureCommunityProjectGroupEntitlements(irocket.getCommunityLifecycle().objectId, irocket.getCommunityProject().objectId, oP.objectId);

						}
					}
					else{
						/// Make is intentionally restricted to paths within a users home directory
						///
						oP = AM6Client.make("GROUP","DATA",sPath);
					}
				}
			},
			DoLogout : function(){
				window.uwm.logout();
				window.uwm.operation("ContinueWorkflow");
			}
		]]>
	</embedded-script>
</Template>
