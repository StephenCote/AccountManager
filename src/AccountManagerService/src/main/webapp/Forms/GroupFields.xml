<html-fragment>
	<import-xml src = "/AccountManagerService/Forms/ParentPicker.xml" id = "ParentPicker" />

	<div class = "rocket-column-2" rid = "dataTypeContainer">
		<p>
			Type:
		</p>
		<p>
			<select rid = "groupType" disabled = "true" bind = "${bean.rocketType}">
				<option>ACCOUNT</option>
				<option>BUCKET</option>
				<option selected = "true">DATA</option>
				<option>PERSON</option>
				<option>USER</option>
			</select>
		</p>
	</div>

	<import-xml src = "/AccountManagerService/Forms/Fragments/SharingFrag.xml" id = "SharingFragment" />
	
	<div class = "rocket-column-2" rid = "memberPicker" style = "display:none;">
		<p rid = "memberPickerTitle">
			<span rid = "memberPickerToggle"></span> <span rid="memberPickerLabel">Members</span>:
		</p>
		<p rid = "memberPickerContent">

			<div component = "wideselect" rid = "membersList">
			</div>

			<br />
			<input type = "button" class = "rocket-button" value = "+" onclick = "${this}.addChildMember()" />
			<input type = "button" class = "rocket-button" value = "-" onclick = "${this}.removeChildMember()" />
			<input type = "button" class = "rocket-button" value = ">" onclick = "${this}.openChildMember()" />
		</p>
	</div>

	<embedded-script><![CDATA[
		embedded_init : function(o){
			var o = this.getBean("rocketType");
			this.getElementByRID("groupType").disabled = (o.id ? true : false);

			if(o.id && o.groupType.match(/^(person|account|user|bucket)$/gi)){
				this.toggleField("memberPickerToggle","memberPickerContent");
				this.getElementByRID("memberPicker").style.display = "block";
				this.getComponentByRID("membersList").setLoadHandler(this.scopeHandler("configMembersList",0,1,1));
			}

		},
		
		openChildMember : function(){
			var oI = this.getMembersList().getActiveItem();
			var sType = this.getElementByRID("groupType").value;
			sType = sType.substring(0,1) + sType.substring(1,sType.length).toLowerCase();
			if(oI && oI.data && this.openItem) this.openItem(oI.data,sType);
		},
		addChildMember : function(){
			var sType = this.getElementByRID("groupType").value;
			sType = sType.substring(0,1) + sType.substring(1,sType.length).toLowerCase();
			this.manageList((sType=="Bucket" ? "Data" : sType), this.getObjectId(),"pickMember",uwm.getPathForType(sType),1);
		},
		pickMember : function(s, v){
			var ctl = this;
			if(v){
				var o = this.getBean("rocketType");
				AM6Client.member("GROUP",o.objectId,v.nameType,v.objectId,true,function(s1, v1){
					if(v1 && v1.json) ctl.getMembersList().addItem(v.name,v);
				});
			}
		},
		removeChildMember : function(){
			var oI = this.getMembersList().getActiveItem(), ctl = this;
			if(oI){
				if(oI.data){
					var v = oI.data;
					var o = this.getBean("rocketType");
					AM6Client.member("GROUP",o.objectId,v.nameType,v.objectId,false,function(s1, v1){
						if(v1 && v1.json) ctl.getMembersList().clearItem(oI.index);
					});
				}
			}
		},
		configMembersList : function(s,v){
			var o = this.getBean("rocketType");
			var oL = this.getMembersList();
			oL.getContainer().style.height = "100px";
			oL.getContainer().style.width = "250px";
			this.refreshMembers();
		},
		refreshMembers : function(a){
			var sType = this.getElementByRID("groupType").value;
			//sType = sType.substring(0,1) + sType.substring(1,sType.length).toLowerCase();
		
			var oL = this.getMembersList();
			oL.clearItems();
			var o = this.getBean("rocketType");
			if(!o || o == null || o.id <= 0) return;
			var aL = AM6Client.members("GROUP",o.objectId,(sType == "BUCKET" ? "DATA" : sType));
			for(var i = 0; i < aL.length;i++){
				oL.addItem(aL[i].name,aL[i]);
			}
		},
		getMembersList : function(){
			return this.getComponentByRID("membersList").GetWideSelect();
		},

		addType : function(o){
			Hemi.log("Add group type: " + o.name + ":" + o.mimeType);

			return AM6Client.update("GROUP",o);
		}
	]]></embedded-script>
</html-fragment>